hw-
Todays Task: 
1. Learn more about rebasing and merging and write its differentiation
2. ⁠Learn and document git stash
3. ⁠Show how git helps collaboration
4. ⁠comparison/difference between git flow, github flow, trunk based development
5. ⁠Trunk based development vs Branch based development (diff, benefits, challenges, atleast 3 each)


-----------------------------------------------------------------------------------------

(1)Learn more about rebasing and merging and write its differentiation.

•Both techniques are used in Git to integrate changes from one branch into another.

REBASING	
1)It moves commits from one branch on top of another branch.	
2)git rebase branch-name	
3)rewrites commit history(Rewrites history to appear as cleaner)	
4)Conflicts will need to be resolved at every commit.

MERGING
1)It combines the two branches by creating a new merge commit that has two parent commits. 
2)git merge branch-name
3)keeps original commits(Preserves the complete history with all branches)
4)Conflicts will be resolved once at merge.


------------------------------------------------------------------------------------------------

(2)⁠Learn and document git stash
git stash is a Git command that temporarily saves your uncommitted changes so you can work on something else, then come back to them later.

-----------------------------------------------------------------------------------------------
(3)⁠Show how git helps collaboration

-Git makes easier for multiple people to work together without overwriting or losing each other's changes.
-Every team member has a full copy of the repository (code, history, branches, etc.).
-Developers can create independent branches to work on features, bug fixes, or experiments.These branches are isolated from each other and from the main codebase.
-You can work without affecting the main branch.
-When a feature is ready, you can merge the branch back into the main branch.
-Team members can review code, discuss changes, and ensure quality before integrating.
-Git shows exact lines where conflicts happen if two people edit the same file.
-Developers can resolve conflicts with clear tools and messages.
-Git tracks who changed what and why using commits and messages.
-Improves transparency, accountability, and debugging.

